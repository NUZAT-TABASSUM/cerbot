---
- name: Check Let's Encrypt email address is set
  ansible.builtin.assert:
    that:
      - elan_certbot_letsencrypt_email | default(None) != None
    fail_msg: 'Please set elan_certbot_letsencrypt_email!'

# ------------------------------------------------------------
# Install Certbot
# ------------------------------------------------------------
- name: Install certbot on RedHat systems
  when: ansible_os_family == 'RedHat'
  block:
    - name: Activate EPEL repository if enabled
      ansible.builtin.dnf:
        name: epel-release
      when: opencast_certbot_enable_epel | bool

    - name: Install certbot using dnf
      ansible.builtin.dnf:
        name: certbot
        state: present

- name: Install certbot on Debian systems
  when: ansible_os_family == 'Debian'
  block:
    - name: Install certbot
      ansible.builtin.apt:
        name: certbot
        state: present
        update_cache: true

# ------------------------------------------------------------
# Enable Certbot timer
# ------------------------------------------------------------
- name: Enable certbot's built-in timer
  ansible.builtin.systemd:
    name: certbot.timer
    state: started
    enabled: true

# ------------------------------------------------------------
# Use Letâ€™s Encrypt
# ------------------------------------------------------------
- name: Use letsencrypt
  when: elan_certbot_ca == 'letsencrypt'
  block:
    - name: Generate initial certificate
      ansible.builtin.shell:
        cmd: >
          certbot certonly
          --non-interactive
          --authenticator webroot
          --webroot-path /var/lib/nginx/
          --agree-tos
          --email {{ elan_certbot_letsencrypt_email }}
          --domains {{ elan_certbot_domains | join(",") }}
          --cert-name elan-certbot-certificate
          {% if opencast_certbot_deploy_hook | default(None) != None %}--deploy-hook "{{ opencast_certbot_deploy_hook }}"{% endif %}
        creates: /etc/letsencrypt/live/elan-certbot-certificate/fullchain.pem
      no_log: true

    - name: Expand existing certificate  # noqa: no-changed-when
      when: elan_certbot_expand_existing
      notify: Reload nginx
      ansible.builtin.shell:
        cmd: >
          certbot certonly
          --non-interactive
          --authenticator webroot
          --webroot-path /var/lib/nginx/
          --agree-tos
          --email {{ elan_certbot_letsencrypt_email }}
          --domains {{ elan_certbot_domains | join(",") }}
          --expand
          --cert-name elan-certbot-certificate
          {% if opencast_certbot_deploy_hook | default(None) != None %}--deploy-hook "{{ opencast_certbot_deploy_hook }}"{% endif %}
      no_log: true

# ------------------------------------------------------------
# Use Sectigo
# ------------------------------------------------------------
- name: Use sectigo
  when: elan_certbot_ca == 'sectigo'
  block:
    - name: Generate initial certificate
      ansible.builtin.shell:
        cmd: >
          certbot certonly
          --standalone
          --non-interactive
          --agree-tos
          --email {{ elan_certbot_letsencrypt_email }}
          --server https://acme.sectigo.com/v2/OV
          --eab-kid {{ elan_certbot_eab_kid }}
          --eab-hmac-key {{ elan_certbot_eab_hmac }}
          --domains {{ elan_certbot_domains | join(",") }}
          --cert-name elan-certbot-certificate
          {% if opencast_certbot_deploy_hook | default(None) != None %}--deploy-hook "{{ opencast_certbot_deploy_hook }}"{% endif %}
        creates: /etc/letsencrypt/live/elan-certbot-certificate/fullchain.pem
      no_log: true

    - name: Expand existing certificate  # noqa: no-changed-when
      when: elan_certbot_expand_existing
      notify: Reload nginx
      ansible.builtin.shell:
        cmd: >
          certbot certonly
          --standalone
          --non-interactive
          --agree-tos
          --email {{ elan_certbot_letsencrypt_email }}
          --server https://acme.sectigo.com/v2/OV
          --eab-kid {{ elan_certbot_eab_kid }}
          --eab-hmac-key {{ elan_certbot_eab_hmac }}
          --domains {{ elan_certbot_domains | join(",") }}
          --expand
          --cert-name elan-certbot-certificate
          {% if opencast_certbot_deploy_hook | default(None) != None %}--deploy-hook "{{ opencast_certbot_deploy_hook }}"{% endif %}
      no_log: true

# ------------------------------------------------------------
# Symlink certificate/key
# ------------------------------------------------------------
- name: Set TLS base dir per distro
  ansible.builtin.set_fact:
    tls_base_dir: "{{ '/etc/pki/tls' if ansible_os_family == 'RedHat' else '/etc/ssl' }}"

- name: Symlink certificates
  ansible.builtin.file:
    src: "/etc/letsencrypt/live/elan-certbot-certificate/{{ item.src }}"
    dest: "{{ tls_base_dir }}/{{ item.dest }}"
    state: link
    force: true
  loop:
    - {src: "fullchain.pem", dest: "certificate.crt"}
    - {src: "privkey.pem", dest: "certificate.key"}
